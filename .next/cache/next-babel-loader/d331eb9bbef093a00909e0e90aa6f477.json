{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/juji/works/juji/components/WorkDetails/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    .text-pane{\\n      display: none;\\n      flex: 1 1 auto;\\n    }\\n    .image-pane{{\\n      flex: 1 1 auto;\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n\\n  @media only screen and (min-width: 1024px) {\\n    height: 100vh;\\n    overflow: hidden;\\n  }\\n\\n  .work-header{\\n    background: #000000;\\n    flex: 0 0 auto;\\n    display: flex;\\n    align-items: center;\\n    padding: 21px;\\n    h1{\\n      flex: 1 1 auto;\\n      margin:0;\\n      font-size: 21px;\\n      font-family: 'Source Code Pro', monospace;\\n    }\\n    a{\\n      flex: 0 0 auto;\\n      margin:0;\\n      font-size: 34px;\\n    }\\n    border-bottom: 1px solid #05101d;\\n  }\\n\\n  .image-pane{\\n    flex: 0 0 auto;\\n    background: #03080e;\\n  }\\n\\n  .text-pane{\\n    flex: 1 1 auto;\\n    box-sizing: border-box;\\n    background-color: #010102;\\n\\n\\n\\n    .work-header{\\n      display: none;\\n    }\\n  }\\n\\n  @media only screen and (min-width: 1024px) {\\n    flex-direction: row;\\n\\n    &>.work-header{\\n      display: none;\\n    }\\n\\n    .image-pane{\\n      flex: 1 1 auto;\\n      padding-top:0;\\n    }\\n\\n    .text-pane{\\n      width: 37.31%;\\n      flex: 0 0 auto;\\n\\n      .work-header{\\n        display: flex;\\n      }\\n    }\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useMemo, useState } from 'react';\nimport data from 'data/works';\nimport styled, { css } from 'styled-components';\nimport Link from 'next/link';\nimport Texts from './Texts';\nimport { useTransition, animated } from 'react-spring';\nimport ImagePaneComp from './ImagePane';\nvar WorkDetail = styled.div(_templateObject(), function (p) {\n  return p.fullScreen ? css(_templateObject2()) : null;\n});\n\nvar WorkHeader = function WorkHeader(props) {\n  var work = props.work;\n  var transitions = useTransition(true, null, {\n    from: {\n      y: -100\n    },\n    enter: {\n      y: 0\n    },\n    leave: {\n      y: -100\n    }\n  });\n  return transitions.map(function (_ref) {\n    var item = _ref.item,\n        key = _ref.key,\n        y = _ref.props.y;\n    return item && __jsx(animated.div, {\n      key: key,\n      className: \"work-header\",\n      style: {\n        transform: y.interpolate(function (y) {\n          return \"translate3d(0, \".concat(y, \"%, 0)\");\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, work.title), __jsx(Link, {\n      href: \"/work\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"\\xD7\")));\n  });\n};\n\nvar ImagePane = function ImagePane(props) {\n  var work = props.work,\n      onFullScreen = props.onFullScreen;\n  var transitions = useTransition(true, null, {\n    from: {\n      x: -100\n    },\n    enter: {\n      x: 0\n    },\n    leave: {\n      x: -100\n    }\n  });\n  return transitions.map(function (_ref2) {\n    var item = _ref2.item,\n        key = _ref2.key,\n        x = _ref2.props.x;\n    return item && __jsx(animated.div, {\n      key: key,\n      className: \"image-pane\",\n      style: {\n        transform: x.interpolate(function (x) {\n          return \"translate3d(\".concat(x, \"%, 0, 0)\");\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(ImagePaneComp, {\n      onFullScreen: onFullScreen,\n      images: work.images,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  });\n};\n\nvar TextPane = function TextPane(props) {\n  var work = props.work,\n      text = props.text;\n  var transitions = useTransition(true, null, {\n    from: {\n      x: 100\n    },\n    enter: {\n      x: 0\n    },\n    leave: {\n      x: 100\n    }\n  });\n  return transitions.map(function (_ref3) {\n    var item = _ref3.item,\n        key = _ref3.key,\n        x = _ref3.props.x;\n    return item && __jsx(animated.div, {\n      key: key,\n      className: \"text-pane\",\n      style: {\n        transform: x.interpolate(function (x) {\n          return \"translate3d(\".concat(x, \"%, 0, 0)\");\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(WorkHeader, {\n      work: work,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), __jsx(Texts, {\n      text: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default (function (props) {\n  var id = props.id,\n      text = props.text;\n  var work = useMemo(function () {\n    return data.find(function (v) {\n      return v.id === id;\n    });\n  }, [id]);\n  if (!work) return null;\n\n  var _useState = useState(false),\n      fullScreen = _useState[0],\n      setFullScreen = _useState[1];\n\n  var onFullScreen = function onFullScreen(bool) {\n    return setFullScreen(bool);\n  };\n\n  return __jsx(WorkDetail, {\n    fullScreen: fullScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(WorkHeader, {\n    work: work,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), __jsx(ImagePane, {\n    onFullScreen: onFullScreen,\n    work: work,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), __jsx(TextPane, {\n    work: work,\n    text: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/juji/works/juji/components/WorkDetails/index.js"],"names":["React","useMemo","useState","data","styled","css","Link","Texts","useTransition","animated","ImagePaneComp","WorkDetail","div","p","fullScreen","WorkHeader","props","work","transitions","from","y","enter","leave","map","item","key","transform","interpolate","title","ImagePane","onFullScreen","x","images","TextPane","text","id","find","v","setFullScreen","bool"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from 'react'\nimport data from 'data/works'\nimport styled, { css } from 'styled-components'\nimport Link from 'next/link'\nimport Texts from './Texts'\nimport {useTransition, animated} from 'react-spring'\nimport ImagePaneComp from './ImagePane'\n\nconst WorkDetail = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media only screen and (min-width: 1024px) {\n    height: 100vh;\n    overflow: hidden;\n  }\n\n  .work-header{\n    background: #000000;\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    padding: 21px;\n    h1{\n      flex: 1 1 auto;\n      margin:0;\n      font-size: 21px;\n      font-family: 'Source Code Pro', monospace;\n    }\n    a{\n      flex: 0 0 auto;\n      margin:0;\n      font-size: 34px;\n    }\n    border-bottom: 1px solid #05101d;\n  }\n\n  .image-pane{\n    flex: 0 0 auto;\n    background: #03080e;\n  }\n\n  .text-pane{\n    flex: 1 1 auto;\n    box-sizing: border-box;\n    background-color: #010102;\n\n\n\n    .work-header{\n      display: none;\n    }\n  }\n\n  @media only screen and (min-width: 1024px) {\n    flex-direction: row;\n\n    &>.work-header{\n      display: none;\n    }\n\n    .image-pane{\n      flex: 1 1 auto;\n      padding-top:0;\n    }\n\n    .text-pane{\n      width: 37.31%;\n      flex: 0 0 auto;\n\n      .work-header{\n        display: flex;\n      }\n    }\n  }\n\n  ${p => p.fullScreen ? css`\n    .text-pane{\n      display: none;\n      flex: 1 1 auto;\n    }\n    .image-pane{{\n      flex: 1 1 auto;\n    }\n  ` : null}\n`\n\nconst WorkHeader = props => {\n\n  const { work } = props;\n  const transitions = useTransition(true, null, {\n    from: { y: -100 },\n    enter: { y: 0 },\n    leave: { y: -100 }\n  })\n\n  return transitions.map(({ item, key, props:{y} }) => item && <animated.div\n    key={key}\n    className=\"work-header\"\n    style={{\n      transform: y.interpolate((y) => `translate3d(0, ${y}%, 0)`)\n    }}\n  >\n    <h1>{work.title}</h1>\n    <Link href=\"/work\"><a>&times;</a></Link>\n  </animated.div>)\n}\n\nconst ImagePane = props => {\n  const { work, onFullScreen } = props;\n  const transitions = useTransition(true, null, {\n    from: { x: -100 },\n    enter: { x: 0 },\n    leave: { x: -100 }\n  })\n\n  return transitions.map(({ item, key, props: {x} }) => item && <animated.div\n    key={key}\n    className=\"image-pane\"\n    style={{\n      transform: x.interpolate((x) => `translate3d(${x}%, 0, 0)`)\n    }}\n  >\n    <ImagePaneComp onFullScreen={onFullScreen} images={work.images} />\n  </animated.div>)\n}\n\nconst TextPane = props => {\n  const { work, text } = props;\n  const transitions = useTransition(true, null, {\n    from: { x: 100 },\n    enter: { x: 0 },\n    leave: { x: 100 }\n  })\n\n  return transitions.map(({ item, key, props:{x} }) => item && <animated.div\n    key={key}\n    className=\"text-pane\"\n    style={{\n      transform: x.interpolate((x) => `translate3d(${x}%, 0, 0)`)\n    }}\n  >\n    <WorkHeader work={work} />\n    <Texts text={text} />\n  </animated.div>)\n}\n\nexport default props => {\n\n  const { id, text } = props;\n  const work = useMemo(() => data.find(v => v.id === id), [ id ])\n  if(!work) return null;\n\n  const [ fullScreen, setFullScreen ] = useState(false)\n  const onFullScreen = (bool) => setFullScreen(bool)\n\n  return <WorkDetail fullScreen={fullScreen}>\n    <WorkHeader work={work} />\n    <ImagePane onFullScreen={onFullScreen} work={work} />\n    <TextPane work={work} text={text} />\n  </WorkDetail>\n\n}\n"]},"metadata":{},"sourceType":"module"}