{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport { TiHome } from \"react-icons/ti\";\nimport Pendulum from 'lib/doublePendulum';\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 0px;\n  overflow: hidden;\n  position: relative;\n\n  canvas{\n    position: absolute;\n    bottom:0;\n    right:0;\n    z-index: 0\n  }\n\n  .top-layout{\n    flex: ${p => p.home ? '0 0 auto' : '1 1 auto'};\n    z-index: 1;\n    overflow: auto;\n    ${p => p.theme.mobile ? `\n      overflow-y: scroll; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    ` : null}\n  }\n\n  .bottom-layout{\n    flex: 0 0 auto;\n    z-index: 1;\n  }\n\n  .pad{\n    height: ${p => p.home ? 'auto' : '0vh'};\n    flex: ${p => p.home ? '1 1 auto' : '0 0 auto'};\n    transition: all 500ms;\n  }\n\n\n`;\nconst Logo = styled.div`\n  padding: 0 55px;\n  padding-top: ${p => p.home ? '55px' : '21px'};\n  transform: translate3d(0,0,0);\n  transition: all 200ms;\n\n  h1{\n    font-family: \"Source Serif Pro\", serif;\n    font-weight: 400;\n    font-size: ${p => p.home ? '4.236em' : '2.82em'};\n    line-height: 1em;\n    margin-top: 13px;\n    transform: translate3d(0,0,0);\n    transition: all 200ms;\n\n    a{\n      color: ${p => p.theme.text};\n    }\n  }\n`;\nconst Content = styled.div`\n  padding: ${p => p.fullContent ? '0px' : '0px 55px'};\n`;\nconst Nav = styled.div`\n  transition: all 500ms;\n  padding: 0px 55px;\n\n  display: flex;\n  align-items: center;\n\n  a{\n    line-height: 89px;\n    margin-right: 13px;\n    display: flex;\n    align-items: center;\n\n    svg{\n      font-size: 21px;\n    }\n  }\n  a.home-link{\n    margin-right: 21px;\n  }\n`;\nexport default withRouter(({\n  router,\n  children\n}) => {\n  const isHome = useMemo(() => router.pathname === '/');\n  const fullContent = useMemo(() => router.pathname.match(/\\/work\\/.+/));\n  const canvas = useRef();\n  const pendulum = useRef();\n  useEffect(() => {\n    if (pendulum.current && pendulum.current.stop) pendulum.current.stop();\n    if (!isHome) return;\n    if (!canvas.current) return;\n    pendulum.current = Pendulum(canvas.current, uri => {\n      console.log(uri);\n    });\n  }, [isHome]);\n  return __jsx(Container, {\n    home: isHome\n  }, isHome ? __jsx(\"canvas\", {\n    ref: canvas\n  }) : canvas.current = null, __jsx(\"div\", {\n    className: \"top-layout\"\n  }, fullContent ? null : __jsx(Logo, {\n    home: isHome\n  }, __jsx(\"h1\", null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"juji };\")))), __jsx(Content, {\n    fullContent: fullContent\n  }, children)), fullContent ? null : __jsx(Nav, {\n    className: \"bottom-layout\",\n    home: isHome\n  }, isHome ? null : __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"home-link\"\n  }, __jsx(TiHome, null))), __jsx(Link, {\n    href: \"/work\"\n  }, __jsx(\"a\", null, \"Work\")), __jsx(Link, {\n    href: \"/technologies\"\n  }, __jsx(\"a\", null, \"Technologies\")), __jsx(Link, {\n    href: \"/contacts\"\n  }, __jsx(\"a\", null, \"Contacts\"))), __jsx(\"div\", {\n    className: \"pad\"\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}