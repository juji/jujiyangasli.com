{"ast":null,"code":"var DoublePendulum = function DoublePendulum(canvas, callback, _ref) {\n  var m1 = _ref.m1,\n      l1 = _ref.l1,\n      a1 = _ref.a1,\n      m2 = _ref.m2,\n      l2 = _ref.l2,\n      a2 = _ref.a2,\n      center = _ref.center,\n      gravity = _ref.gravity,\n      friction = _ref.friction;\n  this.width = 2500;\n  this.bound = {\n    left: 0,\n    top: 0,\n    right: window.outerWidth,\n    bottom: this.width\n  };\n  this.canvas = canvas;\n  this.context = canvas.getContext('2d'); // m = mass\n  // l = length\n  // a = accel\n  // center\n\n  this.l1 = l1 || 300 + 10 * (Math.random() * Math.PI * 2);\n  this.l2 = l2 || 500 + 10 * (Math.random() * Math.PI * 2);\n  this.m1 = m1 || 9;\n  this.m2 = m2 || 2;\n  this.a1 = a1 || Math.PI * 1.5 + Math.random() * 1;\n  this.a2 = a2 || Math.PI * 1.5 + Math.random() * 1;\n  this.gravity = gravity || .5;\n  this.friction = friction || .8;\n  this.center = center || {\n    x: this.width - 55,\n    y: window.outerHeight - 89\n  };\n  this.acc1 = 0;\n  this.acc2 = 0;\n  this.vel1 = 0;\n  this.vel2 = 0;\n  this.x1 = this.center.x + this.l1 * Math.cos(this.a1);\n  this.y1 = this.center.y + this.l1 * Math.sin(this.a1);\n  this.x2 = this.x1 + this.l2 * Math.cos(this.a2);\n  this.y2 = this.y1 + this.l2 * Math.sin(this.a2);\n  this.line = [];\n  this.anim = null;\n  this.linelength = 200;\n  this.linenum = 100000;\n  this.itt = 0;\n  this.stop = false;\n  this.init();\n};\n\nDoublePendulum.prototype.init = function () {\n  this.canvas.width = this.width;\n  this.canvas.height = window.outerHeight;\n  this.context.fillStyle = '#03080e';\n  this.context.fillRect(0, 0, this.width, window.outerHeight); // this.context.shadowBlur = 2;\n  // this.context.shadowColor = \"#242424\";\n\n  this.context.lineWidth = 0.5;\n  this.context.strokeStyle = '#424242';\n  this.draw();\n};\n\nDoublePendulum.prototype.update = function () {\n  var g = this.gravity;\n  var ag1 = this.a1 - Math.PI / 2;\n  var ag2 = this.a2 - Math.PI / 2;\n  this.acc1 = -g * (2 * this.m1 + this.m2) * Math.sin(ag1) - this.m2 * g * Math.sin(ag1 - 2 * ag2);\n  this.acc1 -= 2 * Math.sin(ag1 - ag2) * this.m2 * (Math.pow(this.vel2, 2) * this.l2 + Math.pow(this.vel1, 2) * this.l1 * Math.cos(ag1 - ag2));\n  this.acc1 /= this.l1 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * ag1 - 2 * ag2));\n  this.vel1 += this.acc1;\n  this.a1 += this.vel1;\n  this.acc2 = 2 * Math.sin(ag1 - ag2);\n  this.acc2 *= Math.pow(this.vel1, 2) * this.l1 * (this.m1 + this.m2) + g * (this.m1 + this.m2) * Math.cos(ag1) + Math.pow(this.vel2, 2) * this.l2 * this.m2 * Math.cos(ag1 - ag2);\n  this.acc2 /= this.l2 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * ag1 - 2 * ag2));\n  this.vel2 += this.acc2;\n  this.a2 += this.vel2;\n  this.x1 = this.center.x + this.l1 * Math.cos(this.a1);\n  this.y1 = this.center.y + this.l1 * Math.sin(this.a1);\n  this.x2 = this.x1 + this.l2 * Math.cos(this.a2);\n  this.y2 = this.y1 + this.l2 * Math.sin(this.a2);\n  this.line.push([this.x2 * 1, this.y2 * 1]);\n};\n\nDoublePendulum.prototype.draw = function () {\n  var _this = this;\n\n  if (this.stop) return;\n\n  if (this.line.length) {\n    this.context.beginPath();\n    var l = this.line.slice(this.linelength * this.itt);\n    this.context.moveTo(l[0][0], l[0][1]);\n\n    for (var i in l) {\n      if (!(i * 1)) continue;\n      this.context.lineTo(l[i][0], l[i][1]);\n    }\n\n    this.context.stroke();\n    this.itt++;\n  }\n\n  for (var _i = 0; _i < this.linelength; _i++) {\n    this.update();\n  }\n\n  if (this.line.length < this.linenum && !this.stop) this.anim = requestAnimationFrame(function () {\n    return _this.draw();\n  });else {\n    cancelAnimationFrame(this.anim);\n    this.callback && this.callback(this.canvas.toDataURL());\n  }\n};\n\nDoublePendulum.prototype.stop = function () {\n  this.stop = true;\n};\n\nvar Pendulum = function Pendulum(canvas, callback) {\n  if (false) return;\n  if (typeof requestAnimationFrame === 'undefined') return;\n  return new DoublePendulum(canvas, callback, {});\n};\n\nexport default Pendulum;","map":null,"metadata":{},"sourceType":"module"}