{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    background-image: url('\", \"');\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n  display: inline-block;\\n  width: 150px;\\n  height: 150px;\\n  background-color: #010304;\\n  background-position: center center;\\n  background-size: 70% auto;\\n  background-repeat: no-repeat;\\n  margin-right: 8px;\\n  margin-bottom: 8px;\\n\\n  transition: all 200ms;\\n\\n  \", \"\\n\\n  &:hover{\\n    background-size: 80% auto;\\n  }\\n\\n  &#nodejs{\\n    background-size: 50% auto;\\n  }\\n  &#nodejs:hover{\\n    background-size: 60% auto;\\n  }\\n\\n  &#docker{\\n    background-size: 90% auto;\\n  }\\n  &#docker:hover{\\n    background-size: 100% auto;\\n  }\\n\\n  &#electron{\\n    background-size: 100% auto;\\n    width: 300px;\\n  }\\n  &#electron:hover{\\n    background-size: 110% auto;\\n  }\\n\\n  &#html5{\\n    background-size: 50% auto;\\n  }\\n  &#html5:hover{\\n    background-size: 60% auto;\\n  }\\n\\n  &#css3{\\n    background-size: 50% auto;\\n  }\\n  &#css3:hover{\\n    background-size: 60% auto;\\n  }\\n\\n  &#elastic{\\n    width: 300px\\n  }\\n\\n  &#nats{\\n    width: 300px\\n  }\\n\\n  &#do{\\n    background-size: 80% auto;\\n  }\\n  &#do:hover{\\n    background-size: 90% auto;\\n  }\\n\\n  &#beanstalk{\\n    background-size: 40% auto;\\n  }\\n  &#beanstalk:hover{\\n    background-size: 50% auto;\\n  }\\n\\n  &#stripe,&#algolia,&#twilio,&#mailgun,&#sendgrid{\\n    width: 200px;\\n  }\\n\\n  transition: all 500ms;\\n\\n  @media only screen and (max-width: 584px) {\\n\\n    transition: all 200ms;\\n    background-size: auto 80%;\\n    padding-left: 0px;\\n    padding-right: 0px;\\n\\n    &:hover{\\n      background-size: auto 90%;\\n    }\\n\\n    &,&#stripe,&#algolia,&#twilio,&#mailgun,&#sendgrid,&#elastic,&#nats,&#electron{\\n      width: 100%;\\n    }\\n\\n    &#express,&#algolia,&#mailgun,&#sendgrid{\\n      background-size: auto 30%;\\n    }\\n\\n    &#express:hover,&#algolia:hover,&#mailgun:hover,&#sendgrid:hover{\\n      background-size: auto 40%;\\n    }\\n\\n    &#adonis,&#nats,&#elastic{\\n      background-size: auto 50%;\\n    }\\n    &#adonis:hover,&#nats:hover,&#elastic:hover{\\n      background-size: auto 60%;\\n    }\\n\\n    &#nodejs,&#next,&#socketio,&#beanstalk,\\n    &#mailchimp,&#github,&#bitbucket{\\n      background-size: auto 60%;\\n    }\\n\\n    &#nodejs:hover,&#next:hover,&#socketio:hover,&#beanstalk:hover,\\n    &#mailchimp:hover,&#github:hover,&#bitbucket:hover{\\n      background-size: auto 70%;\\n    }\\n\\n    &#html5,&#css3{\\n      background-size: auto 80%;\\n    }\\n\\n    &#html5:hover,&#css3:hover{\\n      background-size: auto 90%;\\n    }\\n\\n    &#docker,&#do,&#stripe{\\n      background-size: auto 90%;\\n    }\\n\\n    &#docker:hover,&#do:hover,&#stripe:hover{\\n      background-size: auto 100%;\\n    }\\n\\n  }\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .tech-group{\\n    margin-bottom: 34px;\\n\\n    &>div{\\n      display: inline-block;\\n    }\\n\\n    @media only screen and (max-width: 584px) {\\n      &>div{\\n        display: block;\\n      }\\n    }\\n  }\\n\\n  .tech-group:last-child{\\n    margin-bottom: 0px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport data from 'data/tech';\nimport Loader from 'components/Loader';\nimport { Tooltip } from 'react-tippy';\nimport { useTrail, animated } from 'react-spring';\nimport styled, { css } from 'styled-components';\nexport var Container = styled.div(_templateObject());\nexport var TechThumb = styled.a(_templateObject2(), function (props) {\n  return props.image && css(_templateObject3(), props.image);\n});\n\nvar TechGroup = function TechGroup(props) {\n  var group = props.group;\n  var trail = useTrail(group.length, {\n    from: {\n      opacity: 0,\n      x: 21\n    },\n    opacity: 1,\n    x: 0\n  });\n  return trail.map(function (_ref, index) {\n    var x = _ref.x,\n        height = _ref.height,\n        rest = _objectWithoutProperties(_ref, [\"x\", \"height\"]);\n\n    return __jsx(animated.div, {\n      key: group[index].id,\n      style: _objectSpread({}, rest, {\n        transform: x.interpolate(function (x) {\n          return \"translate3d(\".concat(x, \"px,0px,0px)\");\n        })\n      })\n    }, __jsx(Tooltip, {\n      title: group[index].title\n    }, __jsx(TechThumb, {\n      className: \"tech-thumb\",\n      id: group[index].id,\n      target: \"_blank\",\n      href: group[index].url,\n      image: group[index].image\n    })));\n  });\n};\n\nvar Tech = function Tech(props) {\n  var onStart = props.onStart;\n  var trail = useTrail(data.length, {\n    delay: 500,\n    onStart: onStart\n  });\n  return trail.map(function (style, index) {\n    return __jsx(animated.div, {\n      key: \"techgroup_\".concat(index),\n      className: \"tech-group\"\n    }, __jsx(TechGroup, {\n      group: data[index]\n    }));\n  });\n};\n\nexport default (function (props) {\n  var _useState = useState(true),\n      loading = _useState[0],\n      set = _useState[1];\n\n  var _useState2 = useState(false),\n      draw = _useState2[0],\n      setDraw = _useState2[1];\n\n  var onStart = function onStart() {\n    set(false);\n  };\n\n  useEffect(function () {\n    setTimeout(function () {\n      setDraw(true);\n    }, 500);\n  }, []);\n  return __jsx(Container, null, __jsx(\"h2\", null, __jsx(\"span\", {\n    className: \"blue\"\n  }, \"Technologies\"), \"\\xA0\\xA0\", loading ? __jsx(Loader, null) : null, __jsx(\"br\", null), __jsx(\"small\", null, __jsx(\"small\", null, __jsx(\"small\", null, \"Techs i'm familiar with\")))), __jsx(\"br\", null), draw ? __jsx(Tech, {\n    onStart: onStart\n  }) : null);\n});","map":null,"metadata":{},"sourceType":"module"}